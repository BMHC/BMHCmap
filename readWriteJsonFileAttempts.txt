
NB: for all things css, https://css-tricks.com/ has great explanations. Try 
https://css-tricks.com/snippets/css/a-guide-to-flexbox/

writing file:


<textarea id="textbox">Type something here</textarea> 
<button id="create">Create file</button> 
<a download="info.txt" id="downloadlink" style="display: none">Download</a>


(function () {
var textFile = null,
  makeTextFile = function (text) {
    var data = new Blob([text], {type: 'text/plain'});

    // If we are replacing a previously generated file we need to
    // manually revoke the object URL to avoid memory leaks.
    if (textFile !== null) {
      window.URL.revokeObjectURL(textFile);
    }

    textFile = window.URL.createObjectURL(data);

    return textFile;
  };


  var create = document.getElementById('create'),
    textbox = document.getElementById('textbox');

  create.addEventListener('click', function () {
    var link = document.getElementById('downloadlink');
    link.href = makeTextFile(textbox.value);
    link.style.display = 'block';
  }, false);
})();



In javascript console,

fetch('http://127.0.0.1/Users/John/Documents/GitHub/BMHCmap/example_1.json').then(response => response.text())
  .then(text => {aaa = text}) 

fails because I'm not running a server.


fetch('https://drive.google.com/file/d/1TuFz4Tf7P7jw-fxhzL0fHk_YXtlmsvbA/view?usp=sharing').then(response => response.text())
  .then(text => {aaa = text})

fails because CORS doesn't allow cross platform.
https://stackoverflow.com/questions/43262121/trying-to-use-fetch-and-pass-in-mode-no-cors
the response mentioning Heroku easily installs a small proxy server on local machine to work-around.


reading file:

format data as a javascript file, and just load it with
<script src="thefileIwantToLoad.js" defer></script>

That's cool. Lets me do it in init, call that script's single global function

Or

function readFile(file) {
  return new Promise((resolve, reject) => {
    let fr = new FileReader();
    fr.onload = x=> resolve(fr.result);
    fr.readAsText(file);
})}

I like, is simple, lets me have multiple databases, lets user choose the right one hopefully.

SEE ****************
https://developer.mozilla.org/en-US/docs/Web/API/File/Using_files_from_web_applications

